<launch>
  <param name="/use_sim_time" value="true"/>

  <!-- Load point cloud map -->
  <include file="$(find pcd_loader)/launch/points_map_loader.launch">
    <arg name="pcd_file" value="$(find carla_aslan_mapper)/maps/Town10.pcd"/>
  </include>

  <!-- Transform from world to map -->
  <include file="$(find map_tf_generator)/launch/map_tf_generate.launch"/>

  <!-- Voxel grid LiDAR filter for localisation -->
  <include file="$(find voxel_grid_filter)/launch/voxel_grid_filter.launch">
    <arg name="points_topic" value="/points_raw"/>
  </include>

  <!-- Ground filter for object detection -->
  <include file="$(find ray_ground_filter)/launch/ray_ground_filter.launch">
    <arg name="sensor_height" value="2.6"/>
  </include>

  <!-- Publish initial pose to initialise localisation -->
  <node pkg="rostopic" type="rostopic" name="publish_initialpose"
    args="pub /initialpose geometry_msgs/PoseWithCovarianceStamped '{
  header: {
    frame_id: &quot;map&quot;
  },
  pose: {
    pose: {
      position: {
        x: 0,
        y: -0.71,
        z: -2.7
      },
      orientation: {
        x: 0.0,
        y: 0.0,
        z: 0.707106781,
        w: 0.707106781
      }
    }
  }
}
' -l"/>

  <!-- LiDAR based localisation -->
  <param name="tf_x" value="0.7"/>
  <param name="tf_y" value="0.0"/>
  <param name="tf_z" value="2.6"/>
  <param name="tf_yaw" value="0.0"/>
  <param name="tf_pitch" value="0.0"/>
  <param name="tf_roll" value="0.0"/>
  <node pkg="lidar_localizer" type="ndt_matching" name="ndt_matching" output="screen" />
  <node pkg="topic_tools" type="relay" name="pose_relay" output="log" args="/ndt_pose /current_pose"/>
  <node pkg="topic_tools" type="relay" name="vel_relay" output="log" args="/carla_twist /current_velocity"/>

  <!-- <include file="$(find lidar_localizer)/launch/ndt_matching.launch"> -->
  <!-- </include> -->

  <!-- Publish waypoints -->
  <node pkg="rostopic" type="rostopic" name="publish_waypoints"
    args="pub /config/waypoint_loader aslan_msgs/ConfigWaypointLoader '{
  multi_lane_csv: &quot;$(find carla_aslan_mapper)/paths/waypoints.csv&quot;
}' -l"/>
  <include file="$(find waypoint_maker)/launch/waypoint_loader.launch">
  </include>

  <!-- Select lane -->
  <include file="$(find lane_planner)/launch/lane_select.launch"/>

  <!-- Detect and slow down for obstacles -->
  <node pkg="rostopic" type="rostopic" name="publish_velocityset_config"
    args="pub /config/velocity_set aslan_msgs/ConfigVelocitySet '{
  stop_distance_obstacle: 14.0,
  stop_distance_stopline: 5.0,
  detection_range: 1.3,
  threshold_points: 5,
  detection_height_top: 0.1,
  detection_height_bottom: -1.5,
  deceleration_range: 0.0,
}
' -l"/>
  <include file="$(find astar_planner)/launch/obstacle_avoid.launch"/>
  <include file="$(find astar_planner)/launch/velocity_set.launch"/>

  <!-- Pure pursuit path follower -->
  <node pkg="rostopic" type="rostopic" name="publish_pure_pursuit_config"
    args="pub /config/waypoint_follower aslan_msgs/ConfigWaypointFollower '{
  param_flag: 0,
  lookahead_ratio: 2,
  minimum_lookahead_distance: 6
}' -l"/>
  <include file="$(find waypoint_follower)/launch/pure_pursuit.launch"/>
  <include file="$(find waypoint_follower)/launch/twist_filter.launch"/>

  <!-- Vehicle interface -->
  <include file="$(find sd_vehicle_interface)/launch/sd_vehicle_interface.launch">
    <arg name="sd_simulation_mode" value="true"/>
    <arg name="sd_speed_source" value="ndt_speed"/>
    <arg name="sd_vehicle" value="env200"/>
  </include>
</launch>
